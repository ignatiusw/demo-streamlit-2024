-- Login as user DEMO_STREAMLIT_CREATOR with credentials set previously
USE ROLE ROL_DEMO_DATA_CRUD;
USE WAREHOUSE DEMO_PROGRAMMABLE_2024_STREAMLIT_WH;

-- Drop the demo data table first in case it already exists or to reload
DROP TABLE IF EXISTS DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.DEMO_DATA;

-- Load the demo data to DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA as table DEMO_DATA
-- from https://raw.githubusercontent.com/ignatiusw/demo-streamlit-2024/main/data/demo_data.csv
-- check result
SELECT * FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.DEMO_DATA;

-- Drop the store table first in case it already exists or to reload
DROP TABLE IF EXISTS DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.STORE_PCT;

-- Load the demo data to DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA as table DEMO_DATA
-- from https://raw.githubusercontent.com/ignatiusw/demo-streamlit-2024/main/data/store_pct.csv
-- change lat, long, and pct column to FLOAT if it comes up as NUMBER
-- check result
SELECT * FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.STORE_PCT;

-- Create revenue target table
DROP TABLE IF EXISTS DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.TARGET_REVENUE;

CREATE TABLE DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.TARGET_REVENUE AS
SELECT REGION, MONTH, TARGET_REVENUE, CAST(NULL AS TIMESTAMP_TZ) AS UPDATED_TS, CAST(NULL AS VARCHAR(200)) AS UPDATED_BY
FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.DEMO_DATA
WHERE GROSS_SALE IS NULL AND SALES_COST IS NULL
ORDER BY 1,2;

-- check result
SELECT * FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.TARGET_REVENUE;

-- Create a new view to produce sales forecast
CREATE OR REPLACE VIEW DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.REVENUE
AS
SELECT CAST(MONTH AS TIMESTAMP_NTZ) AS MONTH, REGION, GROSS_SALE - SALES_COST AS REVENUE
FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.DEMO_DATA
WHERE GROSS_SALE IS NOT NULL AND SALES_COST IS NOT NULL;

-- check view
SELECT * FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.REVENUE;

-- Create a forecast model using Snowflake Cortex
CREATE OR REPLACE SNOWFLAKE.ML.FORECAST DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.FORECAST_MODEL(
    INPUT_DATA => SYSTEM$REFERENCE('VIEW', 'DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.REVENUE'),
    SERIES_COLNAME => 'REGION',
    TIMESTAMP_COLNAME => 'MONTH',
    TARGET_COLNAME => 'REVENUE'
);

-- Test run forecast model
CALL DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.FORECAST_MODEL!FORECAST(FORECASTING_PERIODS => 4);

-- Visualise quickly
WITH CTE_TARGET AS (
    SELECT MONTH, REGION, TARGET_REVENUE
    FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.DEMO_DATA
), CTE_SALES AS (
    SELECT MONTH, REGION, REVENUE AS ACTUAL_REVENUE, NULL AS FORECAST, NULL AS LOWER_BOUND, NULL AS UPPER_BOUND
    FROM DEMO_PROGRAMMABLE_2024_STREAMLIT_DB.DATA.REVENUE
    UNION ALL
    SELECT ts, series, NULL, forecast, lower_bound, upper_bound
      FROM TABLE(RESULT_SCAN(-1))
)
SELECT s.MONTH, s.REGION, t.TARGET_REVENUE, s.ACTUAL_REVENUE, s.FORECAST, s.LOWER_BOUND, s.UPPER_BOUND
FROM CTE_SALES s
LEFT JOIN CTE_TARGET t
    ON s.MONTH = t.MONTH
        AND s.REGION = t.REGION;
